apiVersion: apps/v1
kind: Deployment
metadata:
  name: etl-framework-api
  namespace: etl-framework
  labels:
    app: etl-framework-api
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: etl-framework-api
  template:
    metadata:
      labels:
        app: etl-framework-api
        version: v1
    spec:
      containers:
      - name: etl-api
        image: ghcr.io/your-org/etl-framework:latest
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: ASPNETCORE_URLS
          value: "http://+:8080"
        - name: ConnectionStrings__DefaultConnection
          valueFrom:
            secretKeyRef:
              name: etl-secrets
              key: database-connection-string
        - name: Redis__ConnectionString
          valueFrom:
            secretKeyRef:
              name: etl-secrets
              key: redis-connection-string
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: data-volume
          mountPath: /app/data
        - name: logs-volume
          mountPath: /app/logs
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: etl-data-pvc
      - name: logs-volume
        persistentVolumeClaim:
          claimName: etl-logs-pvc
      imagePullSecrets:
      - name: ghcr-secret

---
apiVersion: v1
kind: Service
metadata:
  name: etl-framework-api-service
  namespace: etl-framework
  labels:
    app: etl-framework-api
spec:
  selector:
    app: etl-framework-api
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: etl-framework-ingress
  namespace: etl-framework
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - etl-api.yourdomain.com
    secretName: etl-framework-tls
  rules:
  - host: etl-api.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: etl-framework-api-service
            port:
              number: 80

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: etl-data-pvc
  namespace: etl-framework
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: etl-logs-pvc
  namespace: etl-framework
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: Secret
metadata:
  name: etl-secrets
  namespace: etl-framework
type: Opaque
data:
  database-connection-string: # Base64 encoded connection string
  redis-connection-string: # Base64 encoded Redis connection string
  api-key: # Base64 encoded API key

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: etl-config
  namespace: etl-framework
data:
  appsettings.json: |
    {
      "Logging": {
        "LogLevel": {
          "Default": "Information",
          "Microsoft.AspNetCore": "Warning"
        }
      },
      "AllowedHosts": "*",
      "ETLFramework": {
        "MaxConcurrentPipelines": 10,
        "DefaultBatchSize": 1000,
        "EnableMetrics": true,
        "EnableHealthChecks": true
      }
    }

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: etl-framework-hpa
  namespace: etl-framework
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: etl-framework-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: etl-framework-pdb
  namespace: etl-framework
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: etl-framework-api
